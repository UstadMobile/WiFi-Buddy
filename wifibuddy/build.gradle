apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
}

task jar(type: Jar, dependsOn: 'assembleRelease') {
    from fileTree(dir: 'build/intermediates/classes/release')
}



apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}


publishing {
    publications {

        //Taken from: http://stackoverflow.com/questions/26874498/maven-publish-android-library-with-aar-and-source-jar

        wifibuddyandroid(MavenPublication) {
            groupId 'com.ustadmobile.wifibuddy'
            artifactId 'wifibuddy'
            version rootProject.ext.wifiBuddyVersion
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/wifibuddy-release.aar")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if(it.group != null && (it.name != null || "unspecified".equals(it.name)) && it.version != null)
                    {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        if(it.group.equals("workspace") || it.group.equals("wifibuddy")) {
                            dependencyNode.appendNode('groupId', "com.ustadmobile.wifibuddy")
                        }else {
                            dependencyNode.appendNode('groupId', it.group)
                        }

                        dependencyNode.appendNode('artifactId', it.name)
                        if(it.version.equals("unspecified")) {
                            dependencyNode.appendNode('version', ext.wifiBuddyVersion)
                        }else {
                            dependencyNode.appendNode('version', it.version)
                        }

                    }
                }
            }

        }
    }
    repositories {
        //Set this in projectdir/extrasettings.gradle
        maven {
            url rootProject.ext.buildConfigProperties['repoDir']
        }
    }
}
